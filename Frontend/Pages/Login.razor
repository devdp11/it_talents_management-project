@page "/login"

<style>
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .login-form {
        text-align: center;
        margin: auto;
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

    .form-row {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 10px;
    }

    .form-row label {
        margin-right: 10px;
    }

    .form-row input[type="text"],
    
    .form-row input[type="password"] {
        width: 250px; /* Ajuste o tamanho desejado */
        padding: 10px;
        font-size: 16px;
    }

    .form-row button {
        margin-top: 10px;
        padding: 10px 20px;
        font-size: 16px;
        background-color: cornflowerblue;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

<div class="container">
    <div class="login-form">
        <h1>Login Page</h1>
        <div class="form-row">
            <label for="username">Username:</label>
            <input type="text" id="username" />
        </div>
        <div class="form-row">
            <label for="password">Password:</label>
            <input type="password" id="password" />
        </div>
        <div class="form-row">
            <button type="button">Login</button>
        </div>
    </div>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }


    [Inject]
    private NavigationManager navigationManager { get; set; }

    private async Task HandleLoginAsync()
    {
        var url = $"http://localhost:5052/api/Users/login";

        using var client = new HttpClient();
        var response = await client.PostAsync(url, null);

        if (response.IsSuccessStatusCode)
        {
    // Authentication successful
            var result = await response.Content.ReadAsStringAsync();
    // Handle the successful login response
    // Redirect to the main menu or perform other actions
            Console.WriteLine("Success");
            navigationManager.NavigateTo("/");
        }
        else
        {
    // Authentication failed
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Error");
    // Handle the failed login response
    // Show an error message or perform other actions
        }
    }
}