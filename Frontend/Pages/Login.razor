@page "/Login"
@using Blazored.LocalStorage
@using BusinessLogic.Models
@using Frontend.Models

@inject ILocalStorageService localstorage

<h3>Login</h3>

<div class="login-container">
    <div class="form-group">
        <label for="username">Username:</label>
        <input id="username" class="form-control" @bind="Username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <input id="password" class="form-control" type="password" @bind="Password" />
    </div>

    <div class="form-group">
        <button class="btn btn-primary" @onclick="HandleLoginAsync">Login</button>
    </div>

    <div class="form-group">
        <p>Don't have an account? <a href="/Register">Register here</a></p>
    </div>
</div>

<style>
    body {
        background-color: #f0f5fa;
    }

    .login-container {
        max-width: 400px;
        margin: 0 auto;
        padding: 30px;
        border-radius: 5px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    p {
        font-size: 14px;
        margin-bottom: 0;
    }

    a {
        color: #007bff;
        text-decoration: none;
    }

    a:hover {
        text-decoration: underline;
    }

    h3 {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 20px;
        text-align: center;
    }
</style>



@code {
        private string Username { get; set; }
        private string Password { get; set; }

    [Inject]
    private NavigationManager navigationManager { get; set; }

    private async Task HandleLoginAsync()
        {
            var url = $"http://localhost:5052/api/Users/login?username={Username}&password={Password}";

            using var client = new HttpClient();
            var response = await client.PostAsync(url, null);

            if (response.IsSuccessStatusCode)
            {
                // Authentication successful
                var result = await response.Content.ReadFromJsonAsync<UserModel>();
                if(result == null){return;}
                await localstorage.SetItemAsync("isAuthenticated", true);
                await localstorage.SetItemAsync("role", result.RoleName);
                Console.WriteLine("Success");
                navigationManager.NavigateTo("/", true);
            }
            else
            {
        // Authentication failed
                var error = await response.Content.ReadAsStringAsync();
                Console.WriteLine("Error");
        // Handle the failed login response
        // Show an error message or perform other actions
            }
        }
}